#!/usr/bin/env python
# -*- coding: utf-8 -*-

import unittest
from mathfunc import *
from HTMLTestRunner import HTMLTestRunner

class TestMathFunc(unittest.TestCase):

        # setUP(),在每一个Case执行前执行一次,setUp用来为测试准备环境
    # def setUp(self):
    #     print("do something before test.Prepare environment.")

    # # setUP(),在每一个Case执行后执行一次,tearDown用来清理环境
    # def tearDown(self):
    #     print("do something after test.Clean up.")

    # # 所有case执行之前准备一次环境
    # @classmethod
    # def setUpClass(cls):
    #     print("This setUpClass() method only called once.")

    # # 所有case执行之后清理环境
    # @classmethod
    # def tearDownClass(cls):
    #     print("This tearDownClass() method only called once too.")

    # 跳过某个case的方法:
    # 1,unittest.skip(reason)    #无条件跳过
    # 2,unittest.skipIf(condition, reason)   #skipIf当condition为True时跳过
    # 3,unittest.skipUnless(condition, reason)   #skipUnless当condition为False时跳过
    # 或者使用TestCase.skipTest()方法

    # @unittest.skip("do not run this case")
    def test_add(self):
        """Test method add(a, b)"""
        self.assertEqual(3, add(1, 2))
        self.assertNotEqual(3, add(2, 2))

    def test_minus(self):
        """Test method minus(a, b)"""
        self.assertEqual(1, minus(3, 2))

    def test_multi(self):
        """Test method multi(a, b)"""
        self.assertEqual(4, multi(2, 3), "this answer is fail")

    def test_divide(self):
        """Test method divide(a, b)"""
        # self.skipTest("Do not run this test") #跳过,不执行
        self.assertEqual(2, divide(6, 3))
        self.assertEqual
        (2.5, divide(5, 2))

if __name__ == '__main__':

    print('请求地址','www.baidu.com','请求地址结束')
    print('用例描述','接口测试','用例描述结束')


    suite = unittest.TestSuite()
    suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))
    with open('HTMLReport.html', 'wb+') as f:
        runner = HTMLTestRunner(stream=f,
                                title='MathFunc Test Report',
                                description='generated by HTMLTestRunner.'
                                )
        runner.run(suite)
